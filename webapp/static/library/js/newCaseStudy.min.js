/**
 * @author joseph.schmitt
 */
wknyc.cms.newCaseStudy.CaseStudyCapsule = new Class({
	Implements: Options,
	
	options: {
		isRequired: false,
		cloneMarkup: false
	},
	
	//Class vars
	canvas: null,
	hasExpanded: false,
	
	/**
	 * Class constructor
	 */
	initialize: function(canvas, options) {
		this.setOptions(options);
		
		if( this.options.cloneMarkup ) this.canvas = canvas.clone();
		else this.canvas = canvas;
		
		this.setupAssets();
	},
	
	setupAssets: function() {
		if( !this.options.isRequired ) {
			//Order Picker
			var orderpickerField = new wknyc.common.gui.InputField(this.canvas.getElement('.order input'), {prefillElement:null});
			var orderPicker = new wknyc.common.gui.SpinBox(
				this.canvas.getElement('.order input'),
				{
					minValue: 1,
					maxValue: 10
				}
			);
		}
		
		//Input Fields
		var assetTitleField = new wknyc.common.gui.InputField(this.canvas.getElements('.title input')[0], {prefillElement:'label.prefill'});
		var urlField = new wknyc.common.gui.InputField(this.canvas.getElements('.title input')[1], {prefillElement:'label.prefill'});
		var launchDateField;
		this.canvas.getElements('.launchDate input').each(function(input){
			launchDateField = new wknyc.common.gui.InputField(input, {prefillElement:'label.prefill'});
		});
		
		//Expand/Collapse
		var expandCollapse = this.canvas.getElements('a.expand-collapse');
		expandCollapse.each(function(button){
			button.addEvent('click', function(e){
				this.expandCollapseToggle($(e.target));
				return false;
			}.bind(this));
		}.bind(this));
	},
	
	expandCollapseToggle: function(button) {
		if( button.hasClass('open') ) {
			//Needs to update all the expand/collapse buttons in the capsule
			this.canvas.getElements('a.expand-collapse').each(function(but){
				but.removeClass('open')
			});
			
			this.canvas.getElement('.content').addClass('hide');
		}
		else {
			//Needs to update all the expand/collapse buttons in the capsule
			this.canvas.getElements('a.expand-collapse').each(function(but){
				but.addClass('open')
			});
			
			this.canvas.getElement('.content').removeClass('hide');
			
			if( !this.hasExpaned ) this.setupExpandedContent();
		}
	},
	
	setupExpandedContent: function() {
		this.hasExpanded = true;
		
		var addVideo = new wknyc.common.gui.SkinnedFileInput($('select_video'), {
				skinnedElement: $('select_video').getNext('a.plus'),
				reuploadText: 'select new video'
		});
	},
	
	inject: function(target, position) {
		this.canvas.inject(target, position);
	}
});
/**
 * Controls the behavior of generic help text popups for any case study form elements. 
 * 
 * Parameters:
 * 	el:					Element to wrap with the popup. Also used to read the title 
 * 						tag for the content if the titleTagTarget isn't set.
 * Options:
 * 	focusBlurTarget:	Element that should be targeted when adding the 'focus' 
 * 						and 'blur' events. If none is provided, then the 'focus' 
 * 						and 'blur' events aren't added.
 * 	titleTagTarget: 	Element that should be targeted that has a title tag with 
 * 						the content	for the popup. Defaults to the 'el' parameter 
 * 						in the initialize function. 
 * 
 * @author joseph.schmitt
 */
wknyc.cms.newCaseStudy.HelpPopup = new Class({
	Implements: Options,
	
	options: {
		focusBlurTarget: null,
		titleTagTarget: null
	},
	
	//Class vars
	element: $empty,
	wrapper: $empty,
	focusBlurTarget: null,
	titleTagTarget: null,
	popup: $empty,
	
	/**
	 * Class constructor
	 */
	initialize: function(el, options) {
		this.setOptions(options);
		
		this.element = $(el);
		this.focusBlurTarget = $(this.options.focusBlurTarget);
		this.titleTagTarget = $(this.options.titleTagTarget)
		if( !this.options.titleTagTarget ) this.titleTagTarget = this.element;
		
		this.setupAssets();
		this.hide(true);
	},
	
	setupAssets: function(){
		this.wrapper = new Element('div').addClass('popup-wrapper').wraps(this.element);
		this.popup = new Element('div').addClass('popup').inject(this.wrapper);
		var text = new Element('div').inject(this.popup).appendText(this.titleTagTarget.get('title'));
		this.popup.set('tween', {duration: 200, transition: new Fx.Transition(Fx.Transitions.Quad.easeOut)});
		
		this.element.erase('title');
		
		if( this.focusBlurTarget ) {
			this.focusBlurTarget.addEvent('focus', function(){
				this.show();
			}.bind(this));
			
			this.focusBlurTarget.addEvent('blur', function(){
				this.hide();
			}.bind(this));
		}
	},
	
	show: function(skipTween){
		if(skipTween) this.popup.fade('show');
		else this.popup.fade('in');
	},
	
	hide: function(skipTween){
		if(skipTween) this.popup.fade('hide');
		else this.popup.fade('out');
	},
	
	destroy: function() {
		wknyc.cms.newCaseStudy.HelpPopup.Unwrap(this.element);
		this.popup.erase('tween');
		
		if( this.focusBlurTarget ) this.focusBlurTarget.removeEvents();
		
		this.element = null;
		this.wrapper = null;
		this.focusBlurTarget = null;
		this.titleTagTarget = null;
		this.popup = null;
	}
});

wknyc.cms.newCaseStudy.HelpPopup.Unwrap = function(element) {
	var wrapper = element.getParent('.popup-wrapper');
	if(!wrapper) return;
	
	element.inject(wrapper, 'before');
	wrapper.dispose();
};
/**
 * @author joseph.schmitt
 */
wknyc.cms.newCaseStudy.PressCapsule = new Class({
	Implements: Options,
	
	options: {
		isRequired: false,
		cloneMarkup: false
	},
	
	//Class vars
	canvas: null,
	hasExpanded: false,
	
	//Validators
	isEmpty: null,
	isNumeralsOnly: null,
	isMinLength: null,
	
	/**
	 * Class constructor
	 */
	initialize: function(canvas, options) {
		this.setOptions(options);
		
		if( this.options.cloneMarkup ) this.canvas = canvas.clone();
		else this.canvas = canvas;
		
		this.setupAssets();
	},
	
	setupAssets: function() {
		//Input Fields
		var itemNameField = new wknyc.common.gui.InputField(this.canvas.getElement('.itemName input'), {prefillElement:null});
		
		var pressDateField;
		this.canvas.getElements('.pressDate input[type=text]:not(.dateValue)').each(function(input){
			pressDateField = new wknyc.common.gui.InputField(input, {prefillElement:'label.prefill'});
		});
		
		var pressUrlField = new wknyc.common.gui.InputField(this.canvas.getElement('.pressUrl input'), {prefillElement:'label.prefill'});
		var pressSourceField = new wknyc.common.gui.InputField(this.canvas.getElement('.pressSource input'), {prefillElement:null});
		var pressBylineField = new wknyc.common.gui.InputField(this.canvas.getElement('.pressByline input'), {prefillElement:null});
	},
	
	inject: function(target, position) {
		this.canvas.inject(target, position);
	}
});
/**
 * @author joseph.schmitt
 */
wknyc.cms.newCaseStudy.BasicCaseStudyTab = new Class({
	//Class vars
	canvas: $empty,
	form: $empty,
	validator: null,
	
	/**
	 * Class constructor
	 */
	initialize: function(canvas) {
		this.canvas = canvas;
		this.setupAssets();
		this.setupValidation();
	},
	
	setupAssets: function() {
		this.form = this.canvas.getElement('form');
	},
	
	setupValidation: function() {
		this.validator = new Form.Validator(this.form);
		
		this.validator.setOptions({
			onFormValidate: function(passed, form, event) {
				
			},
			
			onElementFail: function(element, validatorNames) {
				console.log("PARENT");
				var errorText;
				validatorNames.each(function(validatorName, index){
					errorText = element.get('validator').getValidator(validatorName).getError(element)
				});
				
				element.set('title', errorText);
				
				wknyc.cms.newCaseStudy.HelpPopup.Unwrap(element);
				var popup = new wknyc.cms.newCaseStudy.HelpPopup(element);
				popup.show();
			},
			
			onElementPass: function(element) {
				
			}
		});
		
	},
	
	submit: function() {
		this.form.getElement('input[type=submit]').click();
	},
	
	destroy: function() {
		this.canvas = null;
		this.form = null;
		this.validator.setOptions({
			onFormValidate: null,
			onElementFail: null,
			onElementPass: null
		});
		this.validator = null;
	}
});
/**
 * @author joseph.schmitt
 */
wknyc.cms.newCaseStudy.AssetsTab = new Class({
	Extends: wknyc.cms.newCaseStudy.BasicCaseStudyTab,
	
	//Class vars
	
	/**
	 * Class constructor
	 */
	initialize: function(canvas) {
		this.parent(canvas);
	},
	
	setupAssets: function() {
		this.parent();
		//Pre-rendered Capsules
		var capsule;
		this.form.getElements('fieldset.capsule').each(function(capsuleMarkup, index){
			capsule = new wknyc.cms.newCaseStudy.CaseStudyCapsule( capsuleMarkup, {isRequired: capsuleMarkup.hasClass('required')} );
		});
		
		//Add more button
		var addMoreButton = $('add_more_assets').addEvent('click', function(e){
			var newCapsule = new wknyc.cms.newCaseStudy.CaseStudyCapsule( $$('.templates fieldset.capsule:not(.required)')[0], {cloneMarkup: true} );
			newCapsule.inject(this.form);
			return false;
		});
	}
});
/**
 * @author joseph.schmitt
 */
wknyc.cms.newCaseStudy.BasicInfoTab = new Class({
	Extends: wknyc.cms.newCaseStudy.BasicCaseStudyTab,
	
	//Class vars
	
	/**
	 * Class constructor
	 */
	initialize: function(canvas) {
		this.parent(canvas);
	},
	
	setupAssets: function() {
		this.parent();
		
		//Input Fields
		var nameField = new wknyc.common.gui.InputField($('nameField'), {prefillElement:null});
		var nameFieldPopup = new wknyc.cms.newCaseStudy.HelpPopup($('nameField'), {focusBlurTarget:'nameField'});
		
		var shortDescField = new wknyc.common.gui.InputField($('shortDescField'), {prefillElement:null});
		var shortDescPopup = new wknyc.cms.newCaseStudy.HelpPopup($('shortDescField'), {focusBlurTarget:'shortDescField'});
		
		var longDescField = new wknyc.common.gui.InputField($('longDescField'), {prefillElement:null});
		var longDescPopup = new wknyc.cms.newCaseStudy.HelpPopup($('longDescField'), {focusBlurTarget:'longDescField'});
		
		var launchDateMonth = new wknyc.common.gui.InputField($('launchDateMonth'));
		var launchDateMonthPopup = new wknyc.cms.newCaseStudy.HelpPopup($('launchDateMonth').getParent(), {focusBlurTarget:'launchDateMonth', titleTagTarget: 'launchDateMonth'});
		
		var launchDateYear = new wknyc.common.gui.InputField($('launchDateYear'));
		var launchDateYearPopup = new wknyc.cms.newCaseStudy.HelpPopup($('launchDateYear').getParent(), {focusBlurTarget:'launchDateYear', titleTagTarget: 'launchDateYear'});
		
		
		//Client Selector
		var clientSelectorPopup = new wknyc.cms.newCaseStudy.HelpPopup($('clientSelect'), {focusBlurTarget:'clientSelect'});
		
		
		//Order Picker
		var orderpickerField = new wknyc.common.gui.InputField($('orderpicker'), {prefillElement:null});
		var orderPicker = new wknyc.common.gui.SpinBox(
			$('orderpicker'),
			{
				minValue: 1,
				maxValue: 10
			}
		);
		var orderpickerPopup = new wknyc.cms.newCaseStudy.HelpPopup($('orderpicker'), {focusBlurTarget:'orderpicker'});
		
		
		//Select PDF
		var select_PDF = new wknyc.common.gui.SkinnedFileInput($('select_PDF'), {
				skinnedElement: $('select_PDF').getNext('a.file_upload'),
				reuploadText: 'select new PDF'
		});
		
		//Draggable Toggle
		var onSiteToggle = new wknyc.common.gui.DraggableToggle(
			$('displayOnSiteRadio-on'),
			$('displayOnSiteRadio-off')
		);
	}
});
/**
 * @author joseph.schmitt
 */
wknyc.cms.newCaseStudy.PressTab = new Class({
	Extends: wknyc.cms.newCaseStudy.BasicCaseStudyTab,
	
	//Class vars
	capsules: [],
	
	/**
	 * Class constructor
	 */
	initialize: function(canvas) {
		this.parent(canvas);
	},
	
	setupAssets: function() {
		this.parent();
		
		//Pre-rendered Capsules
		var capsule;
		this.form.getElements('fieldset.capsule').each(function(capsuleMarkup, index){
			capsule = new wknyc.cms.newCaseStudy.PressCapsule( capsuleMarkup, {isRequired: capsuleMarkup.hasClass('required')} );
			this.capsules.push(capsule);
		}.bind(this));
		
		//Add more button
		var addMoreButton = $('add_more_press').addEvent('click', function(e){
			var newCapsule = new wknyc.cms.newCaseStudy.PressCapsule( $$('.templates fieldset.capsule')[0], {cloneMarkup: true} );
			newCapsule.inject(this.form);
			return false;
		});
	},
	
	setupValidation: function() {
		this.validator = new Form.Validator(this.form);
		this.validator.ignoreField(this.canvas.getElement('.pressDate .pressDateDay'));
		this.validator.ignoreField(this.canvas.getElement('.pressDate .pressDateMonth'));
		this.validator.ignoreField(this.canvas.getElement('.pressDate .pressDateYear'));
		this.validator.enforceField(this.canvas.getElement('.pressDate .dateValue'));
		
		this.validator.setOptions({
			onFormValidate: function(passed, form, event) {
				
			},
			
			onElementFail: function(element, validatorNames) {
				var errorText;
				validatorNames.each(function(validatorName, index){
					errorText = element.get('validator').getValidator(validatorName).getError(element)
				});
				
				element.set('title', errorText);
				wknyc.cms.newCaseStudy.HelpPopup.Unwrap(element);
				var popup = new wknyc.cms.newCaseStudy.HelpPopup(element);
				popup.show();
			},
			
			onElementPass: function(element) {
				wknyc.cms.newCaseStudy.HelpPopup.Unwrap(element);
			}			
		});
	},
	
	getDateFromFields: function() {
		var month = this.canvas.getElement('.pressDate .pressDateMonth').get('value') != "" ? this.canvas.getElement('.pressDate .pressDateMonth').get('value').toInt() : "";
		var day = this.canvas.getElement('.pressDate .pressDateDay').get('value') != "" ? this.canvas.getElement('.pressDate .pressDateDay').get('value').toInt() : "";
		var year = this.canvas.getElement('.pressDate .pressDateYear').get('value') != "" ? this.canvas.getElement('.pressDate .pressDateYear').get('value').toInt() : "";
		
		if( month+day+year == "" ) return "";
		else return month+'/'+day+'/'+year;
	},
	
	submit: function() {
		this.canvas.getElement('.pressDate .dateValue').set({'value': this.getDateFromFields()});
		console.log(this.canvas.getElement('.pressDate .dateValue'));
		console.log(this.canvas.getElement('.pressDate .dateValue').get('value'));
		this.parent();
	}
});
/**
 * Combined view & controller for the Case Studies section.
 * 
 * @author joseph.schmitt
 */
wknyc.cms.newCaseStudy.NewCaseStudy = new Class({
	//Class vars
	tabs: null,
	tabLoadedCallback: null,
	
	currentTab: null,
	
	/**
	 * Class constructor
	 */
	initialize: function() {
		this.setupAssets();
	},
	
	setupAssets: function(){
		//Tab Navigation
		this.tabs = new wknyc.common.gui.Tabs(
			$('steps_tabs'), 
			$('steps_content'), 
			{
				useAjax: true,
				defaultTab: 2
			}
		).addEvent('change', this.onTabChange.bind(this));
		
		this.tabnav = new wknyc.common.gui.Tabs(
			$('steps_nav').getElement('ol'),
			$('steps_content'),
			{
				useAjax: true,
				loadDefaultTab: false
			}
		).addEvent('change', this.onTabNav.bind(this));
		
		var saveDraftButton = $('steps_nav').getElement('a.save').addEvent('click', function(e){
			this.onSaveDraft();
			return false;
		}.bind(this));
		
		var submitButton = $('steps_nav').getElement('a.submit').addEvent('click', function(e){
			this.onFinish();
			return false;
		}.bind(this));
	},
	
	onTabChange: function(tabindex, tab) {
		this.tabLoadedCallback.call();
		this.updateNav();
	},
	
	/**
	 * Saves the current tab section, but doesn't markt he role as finished or publish
	 */
	onSaveDraft: function() {
		this.currentTab.submit();
		
		/*
		 * TODO: Stuf ro ajax call to mark the role as saved.
		 */
	},
	
	/**
	 * Saves the current tab and marks the role as finished.
	 */
	onFinish: function() {
		this.currentTab.submit();
		
		/*
		 * TODO: Stub for ajax call to mark the role as finished.
		 */
	},
	
	/**
	 * Sets the function that should be called once the new tab content has been
	 * loaded.
	 * @param {Function} fnc - Function to set the callback to.
	 */
	setTabLoadedCallback: function(fnc) {
		this.tabLoadedCallback = fnc.bind(this);
	},
	
	onTabNav: function(tabindex, tab) {
		this.tabs.selectTabByIndex(tabindex);
	},
	
	updateNav: function() {
		$('steps_nav').getElements('ol li:not(.hide)').each(function(item, index){
			item.addClass('hide');
		});
		
		var prev = this.tabs.currentIndex - 1;
		var next = this.tabs.currentIndex + 1;
		
		if( prev >= 0 ) 
			$('steps_nav').getElements('ol li')[prev].removeClass('hide');
		
		if( next < $('steps_nav').getElements('ol li').length )
			$('steps_nav').getElements('ol li')[next].removeClass('hide');
	},
	
	/**
	 * Function to be called once the Basic Info section is loaded.
	 */
	setupBasicInfoSection: function() {
		if( this.currentTab ) this.currentTab.destroy();
		this.currentTab = new wknyc.cms.newCaseStudy.BasicInfoTab($('basic_info'));
	},
	
	setupAssetsSection: function() {
		if( this.currentTab ) this.currentTab.destroy();
		this.currentTab = new wknyc.cms.newCaseStudy.AssetsTab($('assets'));
	},
	
	setupPressSection: function() {
		if( this.currentTab ) this.currentTab.destroy();
		this.currentTab = new wknyc.cms.newCaseStudy.PressTab($('press'));
	}
});
